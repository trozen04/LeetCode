class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> subset = new ArrayList<>();
        combinations(0, candidates, new ArrayList<>(),subset,target );            
        return subset;        
    }
    void combinations(int start, int[] candidates, List<Integer> current,List<List<Integer>> subset, int target){
        if(target == 0) subset.add(new ArrayList(current));
        if(target < 0) return;

        for(int i = start; i < candidates.length; i++){
            current.add(candidates[i]);
            combinations(i, candidates, current, subset, target-candidates[i]);
            current.remove(current.size()-1);
        }
    }
}
